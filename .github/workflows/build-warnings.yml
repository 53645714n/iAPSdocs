name: Build Warnings

on:
  push:
    branches:
      - master

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        language: [en, fr, de, nl]

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install required packages
        run: |
          python -m pip install --exists-action=w --no-cache-dir -r requirements.rtd.txt
          python -m pip install --exists-action=w --no-cache-dir -r requirements.txt

      - name: Path English
        if: matrix.language == 'en'
        run: echo "DOC_PATH=docs/EN/" >> $GITHUB_ENV

      - name: Path translation
        if: matrix.language != 'en'
        run: echo "DOC_PATH=docs/CROWDIN/${{ matrix.language }}/" >> $GITHUB_ENV

      - name: Show conf
        run: |
          cat ${{ env.DOC_PATH }}conf.py
          cat docs/shared.conf.py

      - name: Build
        run: |
          cd ${{ env.DOC_PATH }}
          sphinx-build -T -E -n -v -w output.txt -q -b html -d _build/doctrees . _build/html

        # See https://www.sphinx-doc.org/en/master/man/sphinx-build.html
        # sphinx-build [options] <sourcedir> <outputdir>
        # -T Display the full traceback when an unhandled exception occurs. Otherwise, only a summary is displayed and the traceback information is saved to a file for further analysis.
        # -E Don’t use a saved environment (the structure caching all cross-references), but rebuild it completely. The default is to only read and parse source files that are new or have changed since the last run.
        # -n Run in nit-picky mode. Currently, this generates warnings for all missing references. See the config value nitpick_ignore for a way to exclude some references as “known missing”.
        # -q Do not output anything on standard output, only write warnings and errors to standard error.
        # -W Turn warnings into errors. This means that the build stops at the first warning and sphinx-build exits with exit status 1.
        # -v Increase verbosity (loglevel). This option can be given up to three times to get more debug logging output.
        # -b <buildername>
        # -D <setting=value> Override a configuration value set in the conf.py file.
        # --keep-going With -W option, keep going processing when getting warnings to the end of build, and sphinx-build exits with exit status 1. New in version 1.8.

      - name: Process build results
        run: |
          cd ${{ env.DOC_PATH }}
          echo "BUILD_WARNINGS=$(wc -l < output.txt)" >> $GITHUB_ENV
          echo "MESSAGE=OK" >> $GITHUB_ENV
          echo "COLOR=green" >> $GITHUB_ENV

      - name: Error on warning
        if: env.BUILD_WARNINGS != '0'
        run: |
          echo number of warning ${{ env.BUILD_WARNINGS }}
          echo "MESSAGE=${{ env.BUILD_WARNINGS }}" >> $GITHUB_ENV
          echo "COLOR=red" >> $GITHUB_ENV
          exit 1

      - if: ${{ always() }}
        name: Create the Badge
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 4d086495590ccb904468b66aecc48bdb
          filename: AndroidAPSdocs_build_warnings_${{ matrix.language }}_master.json
          label: Warnings - ${{ matrix.language }}
          message: ${{ env.MESSAGE }}
          color: ${{ env.COLOR }}
          namedLogo: read the docs
